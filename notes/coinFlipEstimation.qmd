---
title: "Coin flip estimation"
author: "Dr. Alexander Fisher"
mainfont: Lato
format: 
  html:
    toc: true
---
::: panel-tabset

### output

```{r}
#| warning: false
#| echo: false
library(tidyverse)
library(latex2exp)
library(glue)
library(patchwork)

set.seed(3)
flips = rbinom(5000, size = 1, prob = 0.25)
flips %>% head(10)
```

### code

```{r}
#| eval: false
library(tidyverse)
library(latex2exp)
library(glue)
library(patchwork)

set.seed(3)
flips = rbinom(5000, size = 1, prob = 0.25)
flips %>% head(10)
```

:::

We observe 10 flips from the same coin above, where 0 is "tails" and 1 is "heads".
In summary, we see Y = 1 heads in 10 coin flips. Is this a fair coin?

---

To articulate this mathematically, let $\theta \in [0, 1]$ be the bias-weighting (the chance of heads) of the coin.
Fundamentally, we want $p(\theta | y)$, which we can expand via Bayes' rule,

$$
p(\theta | y) = \frac{p(y|\theta) p(\theta)}{\int_{\theta \in \Theta} p(y|\theta) p(\theta) d\theta}
$$

::: callout-important
## Exercise
Label the following on the equation above.
:::

**Likelihood**: the data generative process. The probability (or density) of the data given the model. Most often thought of as a function of the *parameter*. 

**Prior**: Our *a priori* (beforehand) beliefs about the true population characteristics.

**Posterior**: Our *a posteriori* (afterwards) beliefs about the true population characteristics after having observed the data set $y$.

**Normalizing constant**: A number that enables a pmf or pdf to integrate to 1.

## Uniform prior

Let $y$ be the number of heads in $n$ coin flips.

$$
p(\theta | y) \propto \theta^{y}(1-\theta)^{n-y}
$$

This is the kernel of a ___ density, where $\alpha = y + 1$ and $\beta = n - y + 1$, hence

$$
p(\theta | y) = \frac{\Gamma(n + 2)}{\Gamma(y + 1)\Gamma(n-y+1)} \theta^{y}(1-\theta)^{n-y}
$$

and the posterior mean is $\frac{y + 1}{n + 2}$. 

Let's examine how the posterior evolves with each successive coin flip.

::: panel-tabset

### plots

```{r}
#| warning: false
#| echo: false
N = c(0, 1, 2, 3, 4, 10, 100, 1000, 5000)

for (i in seq_along(N)) {
n = N[i]
if(n == 0) {
  y = 0
}
else {
  y = sum(flips[1:n])
}

x = 0:1 # range
df = data.frame(x)
assign(paste0("p", i),
  df %>%
  ggplot(aes(x = x)) +
  stat_function(fun=dbeta, 
                args = list(shape1 = y + 1, shape2 = n - y + 1)) +
  labs(y = TeX("$p(\\theta | y)$"), x = TeX("$\\theta$"),
       title = glue("n = {n}")) +
  theme_bw()
)
}

(p1 + p2 + p3) / 
  (p4 + p5 + p6) / 
  (p7 + p8 + p9)
```
### code

```{r}
#| eval: false
N = c(0, 1, 2, 3, 4, 10, 100, 1000, 5000)

for (i in seq_along(N)) {
n = N[i]
if(n == 0) {
  y = 0
}
else {
  y = sum(flips[1:n])
}

x = 0:1 # range
df = data.frame(x)
assign(paste0("p", i),
  df %>%
  ggplot(aes(x = x)) +
  stat_function(fun=dbeta, 
                args = list(shape1 = y + 1, shape2 = n - y + 1)) +
  labs(y = TeX("$p(\\theta | y)$"), x = TeX("$\\theta$"),
       title = glue("n = {n}")) +
  theme_bw()
)
}

(p1 + p2 + p3) / 
  (p4 + p5 + p6) / 
  (p7 + p8 + p9)
```

:::

## Conjugacy

## Another prior

## Reliability